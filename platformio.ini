; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html
[arduinoSensorBase]
platform = atmelavr
board = uno
framework = arduino
; Need to specify build src filter when extending, should look something like below
; build_src_filter = +<vitals_node/sensor.cpp> +<common/> +<arch/arduino.cpp> +<arch/arduino.hpp>
lib_deps =
    arkhipenko/TaskScheduler @ 3.7.0
    sandeepmistry/CAN @ 0.3.1
monitor_port = /dev/ttyACM0
upload_port = /dev/ttyACM0
build_flags = -DSENSOR_ARDUINO_BUILD

[espSensorBase]
platform = espressif32
framework = espidf
board = esp32dev
; change microcontroller
board_build.mcu = esp32 #consider add an E
; build_src_filter = +<vitalsNode> +<pecan/> -<pecan/arduinoSpecific.cpp>
monitor_port = /dev/ttyUSB0
upload_port = /dev/ttyUSB0
monitor_speed = 115200
build_flags = -DSENSOR_ESP_BUILD

[env:sampleName]
extends=arduinoSensorBase
build_src_filter = +<sensors/sampleName> +<sensors/common> +<pecan> -<pecan/espSpecific.c> +<arduinoSched>
build_flags = -DNODE_CONFIG=sampleName/myDefines.hpp   ;gives path to the header with #defines and static data Initialization specific to this node, with the path starting relevant to the sensor directory.

[env:genericNodeName]
extends=arduinoSensorBase
build_src_filter = +<sensors/genericNodeName> +<sensors/common> +<pecan> -<pecan/espSpecific.c> +<arduinoSched>
build_flags = -DNODE_CONFIG=genericNodeName/myDefines.hpp 

; [env:mcu_node]
; platform = nxplpc
; board = lpc1768
; framework = mbed
; build_src_filter = +<mcu_node/> +<common/> +<arch/mbed.cpp>
; monitor_port = /dev/ttyACM0
; upload_port = /media/torrey/MBED

; [env:vitalsMBED]
; platform = nxplpc
; board = lpc1768
; framework = mbed
; build_src_filter = +<vitals_node/mbedVitals.cpp> +<common/> +<arch/mbed.cpp>
; monitor_port = /dev/ttyACM0
; upload_port = /media/torrey/MBED

[env:precharge]
platform = atmelavr
board = uno
framework = arduino
monitor_port = /dev/ttyACM0
build_src_filter = +<PrechargeCircuit/precharge.cpp> 

[env:sensor_node]
platform = atmelavr
board = uno
framework = arduino
build_src_filter = +<vitals_node/sensor.cpp> +<common/> +<arch/arduino.cpp> +<arch/arduino.hpp>
lib_deps =
    arkhipenko/TaskScheduler @ 3.7.0
    sandeepmistry/CAN @ 0.3.1
monitor_port = /dev/ttyACM0
upload_port = /dev/ttyACM0

[env:sensor_node2]
platform = atmelavr
board = uno
framework = arduino
build_src_filter = +<sensors/common> +<pecan/> -<pecan/espSpecific.c> +<arduinoSched/> +<sensors/sensor_name1/>
build_flags = -DNODE_CONFIG=../sensor_name1/myDefines.hpp   ;gives path to the header with #defines and static data Initialization specific to this node, with the path starting relevant to the sensor directory.
lib_deps =
    arkhipenko/TaskScheduler @ 3.7.0
    sandeepmistry/CAN @ 0.3.1
monitor_port = /dev/ttyACM0
upload_port = /dev/ttyACM0

[env:freeVitals]
platform = espressif32
framework = espidf
board = esp32dev

; change microcontroller
board_build.mcu = esp32 #consider add an E
; build_src_filter = +<vitalsNode> +<pecan/> -<pecan/arduinoSpecific.cpp>
monitor_port = /dev/ttyUSB0
upload_port = /dev/ttyUSB0
monitor_speed = 115200
build_flags = -DVITALS_ESP_BUILD