; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html
[arduinoBase]
platform = atmelavr
board = uno
framework = arduino
; Need to specify build src filter when extending, should look something like below
; build_src_filter = +<vitals_node/sensor.cpp> +<common/> +<arch/arduino.cpp> +<arch/arduino.hpp>
lib_deps =
    arkhipenko/TaskScheduler @ 3.7.0
    sandeepmistry/CAN @ 0.3.1
monitor_port = /dev/ttyACM0
upload_port = /dev/ttyACM0

[espBase]
platform = espressif32
framework = espidf
board = esp32dev
board_build.mcu = esp32 #consider add an E
#specifying build_src_filter is invalid for espidf framework. ESP-IDF requires having two CMAKE files (one at src level to link and whatnot , and another at proj level to name project, and specify path to IDF toolchain stuff)
#instead, we can specifiy board_build.cmake_extra_args (in extensions of this), and modify the CMAKE file at src level to interpet these args to include appropriate files
monitor_port = /dev/ttyUSB0
upload_port = /dev/ttyUSB0
monitor_speed = 115200

[env:ESP_IMU]
extends=espBase
board_build.cmake_extra_args = -DCMAKE_ESP_IMU_SENSE=ON #specify path to your source file. for example vitalsNode/main.c would include the main.c file for vitals
board_build.use_idf_component_manager = true
extra_components_dirs = components


#example of an esp ini
[env:basicESP]  #make a copy of this environment, give a dif name, and fill in the src file u want to include if you want to do testing without any other helper files
extends=espBase
board_build.cmake_extra_args = -DCMAKE_BASIC_NODE=ON -DCMAKE_SRC_FILE=InsertNameHere #specify path to your source file. for example vitalsNode/main.c would include the main.c file for vitals


[env:motorControllerCANUART]
extends=espBase
board_build.cmake_extra_args = -DCMAKE_MOTOR_CONTROLLER=ON #specify path to your source file. for example vitalsNode/main.c would include the main.c file for vitals

[env:IMU]
extends=espBase
board_build.cmake_extra_args = -DCMAKE_IMU_SENSE=ON #specify path to your source file. for example vitalsNode/main.c would include the main.c file for vitals



[env:cyberIMU]
extends=espBase
board_build.cmake_extra_args = -DCMAKE_IMU_CYBER=ON


#example of an arduino ini
[env:precharge]
platform = atmelavr
board = uno
framework = arduino
monitor_port = /dev/ttyACM0
build_src_filter = +<PrechargeCircuit/precharge.cpp> 
