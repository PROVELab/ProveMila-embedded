; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html
[arduinoBase]
platform = atmelavr
board = uno
framework = arduino
; Need to specify build src filter when extending, should look something like below
; build_src_filter = +<vitals_node/sensor.cpp> +<common/> +<arch/arduino.cpp> +<arch/arduino.hpp>
lib_deps =
    arkhipenko/TaskScheduler @ 3.7.0
monitor_port = /dev/ttyACM0
upload_port = /dev/ttyACM0
build_src_filter = +<arduinoSched/>

[arduinoCANBase]
extends=arduinoBase
lib_deps = 
    ${arduinoBase.lib_deps}
    sandeepmistry/CAN @ 0.3.1
build_src_filter = ${arduinoBase.build_src_filter} +<pecan/> -<pecan/espSpecific.c> 

[arduinoSensorBase]
extends = arduinoCANBase
build_src_filter = ${arduinoCANBase.build_src_filter} +<sensors/common/>

[espBase]
platform = espressif32
framework = espidf
board = esp32dev
board_build.mcu = esp32 #consider add an E
#specifying build_src_filter is invalid for espidf framework. ESP-IDF requires having two CMAKE files (one at src level to link and whatnot , and another at proj level to name project, and specify path to IDF toolchain stuff)
#instead, we can specifiy board_build.cmake_extra_args (in extensions of this), and modify the CMAKE file at src level to interpet these args to include appropriate files
monitor_port = /dev/ttyUSB0
upload_port = /dev/ttyUSB0
monitor_speed = 115200

[espSensorBase]
extends = espBase
board_build.cmake_extra_args = -DCMAKE_SENSOR_ESP_BUILD=ON
build_flags = -DSENSOR_ESP_BUILD=ON

#paste sensor environments here. or not idrc
[env:pedalSensor]
extends=espSensorBase
board_build.cmake_extra_args = ${espSensorBase.board_build.cmake_extra_args} -DSENS_DIR=pedalSensor
build_flags = ${espSensorBase.build_flags} -DNODE_CONFIG=pedalSensor/myDefines.hpp

[env:APSensorArduino]
extends=arduinoSensorBase
build_src_filter = ${arduinoSensorBase.build_src_filter}+<sensors/APSensorArduino>
build_flags = -DNODE_CONFIG=APSensorArduino/myDefines.hpp -DSENSOR_ARDUINO_BUILD=ON
; monitor_port = /dev/ttyUSB1
; upload_port = /dev/ttyUSB1
#

[env:APSensorESP]
extends=espSensorBase
board_build.cmake_extra_args = ${espSensorBase.board_build.cmake_extra_args} -DSENS_DIR=APSensorESP
build_flags = ${espSensorBase.build_flags} -DNODE_CONFIG=APSensorESP/myDefines.hpp
; monitor_port = /dev/ttyUSB1
; upload_port = /dev/ttyUSB1

[env:motorControllerCANUART]
extends=espBase
board_build.cmake_extra_args = -DCMAKE_MOTOR_CONTROLLER=ON #specify path to your source file. for example vitalsNode/main.c would include the main.c file for vitals


[env:freeVitals]
extends=espBase
board_build.cmake_extra_args = -DCMAKE_VITALS_ESP_BUILD=ON
build_flags = -DVITALS_ESP_BUILD

[env:precharge]
extends=arduinoBase
build_src_filter = +<PrechargeCircuit/precharge.cpp> 

[env:CAN_to_UART]
extends=arduinoCANBase
build_src_filter = ${arduinoCANBase.build_src_filter}  +<CAN_to_UART/>
monitor_speed = 115200

